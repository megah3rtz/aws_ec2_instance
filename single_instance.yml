---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation '
Parameters:
  S3bucket:
    Type: String
    Default: ansible-temp-wdef23
  ImageId:
    Type: String
    Default: "ami-0181f8d9b6f098ec4"
  VpcId:
    Type: AWS::EC2::VPC::Id
    Default: "vpc-1d20387a"
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    Default: test-keypair
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    ConstraintDescription: must be a valid EC2 instance type.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

  WebServerCapacity:
    Default: '1'
    Description: The initial number of WebServer instances
    Type: Number
    MinValue: '1'
    MaxValue: '5'
    ConstraintDescription: must be between 1 and 5 EC2 instances.
Resources:
  InstanceInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles: 
        - !Ref S3ReadRole
  S3ReadRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Path: /
  S3ReadPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: S3ReadPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: 's3:*'
            Resource: '*'
      Roles: 
        - !Ref S3ReadRole
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ssh access
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: !Ref SSHLocation
      VpcId:
        Ref: VpcId
  WebServerGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones:
        !GetAZs eu-west-1

      LaunchConfigurationName:
        Ref: LaunchConfig
      MinSize: '1'
      MaxSize: '5'
      DesiredCapacity:
        Ref: WebServerCapacity
      Tags:
        - Key: "Name"
          Value: "Webserver_dev_sec_ops_blog"
          PropagateAtLaunch: True
      

  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref InstanceInstanceProfile
      SecurityGroups: 
      - !Ref InstanceSecurityGroup
      KeyName: !Ref KeyName
      SpotPrice: 0.1
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update && apt-get upgrade -y
          apt-get install python-pip python-dev virtualenv libmysqlclient-dev -y
          pip install --upgrade pip
          pip install paramiko ansible awscli
          mkdir -p /home/ubuntu/ansible && aws s3 sync s3://${S3bucket}/ /home/ubuntu/ansible/
          ansible-playbook /home/ubuntu/ansible/playbooks/playbook.yml
